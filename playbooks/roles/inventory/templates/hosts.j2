# Create an OSEv3 group that contains the masters and nodes groups
# For highly available load balancer a custom setup is needed, see
# for example https://github.com/myllynen/openshift-ha-load-balancer
[OSEv3:children]
masters
nodes
etcd
{% if number_of_ocs_nodes >= '3' %}
glusterfs
{% endif %}

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user={{remote_user}}
ansible_become=yes

# https://github.com/openshift/openshift-ansible/blob/master/DEPLOYMENT_TYPES.md
deployment_type=openshift-enterprise
containerized=false
openshift_use_crio={{ true if container_runtime == 'crio' else false }}
openshift_use_crio_only=false
openshift_crio_enable_docker_gc=false
oreg_url=registry.redhat.io/openshift3/ose-${component}:${version}
oreg_auth_user={{ hostvars['localhost']['oreg_auth_user'] }}
oreg_auth_password={{ hostvars['localhost']['oreg_auth_password'] }}


# Skip env validation
openshift_disable_check=disk_availability,memory_availability
openshift_enable_unsupported_configurations=True

# Configure usage of openshift_clock role.
openshift_clock_enabled=true

# Set upgrade restart mode for full system restarts
openshift_rolling_restart_mode=system

# Enable cockpit
osm_use_cockpit=false
osm_cockpit_plugins=['cockpit-kubernetes', 'cockpit-pcp', 'setroubleshoot-server']

# Docker / Registry Configuration
openshift_docker_disable_push_dockerhub=true
openshift_docker_options="--log-driver=journald --log-level=warn --ipv6=false"
openshift_docker_insecure_registries=docker-registry.default.svc,docker-registry.default.svc.cluster.local

# Native high availability cluster method with optional load balancer.
#openshift_master_cluster_method=native
openshift_master_cluster_hostname=master01
openshift_master_cluster_public_hostname={{_master_dns}}
openshift_master_default_subdomain={{_apps_dns}}
openshift_master_overwrite_named_certificates=true

{% if cert_master_certfile is defined %}
openshift_master_named_certificates=[{"certfile": "{{cert_master_certfile}}", "keyfile": "{{cert_master_keyfile}}", "cafile": "{{cert_master_cafile}}"}]
{% endif %}
{% if cert_router_certfile is defined %}
openshift_hosted_router_certificate={"certfile": "{{cert_router_certfile}}", "keyfile": "{{cert_router_keyfile}}", "cafile": "{{cert_router_cafile}}"}
{% endif %}

# Configure nodeIP in the node config
# This is needed in cases where node traffic is desired to go over an
# interface other than the default network interface.

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
os_sdn_network_plugin_name=redhat/openshift-ovs-multitenant

# Configure SDN cluster network and kubernetes service CIDR blocks. These
# network blocks should be private and should not conflict with network blocks
# in your infrastructure that pods may require access to. Can not be changed
# after deployment.
osm_cluster_network_cidr=10.1.0.0/16
openshift_portal_net=172.30.0.0/16
osm_host_subnet_length=8

# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]


# Enable API service auditing, available as of 3.2
#openshift_master_audit_config={"enabled": false}


# Install the openshift examples
openshift_install_examples=true
openshift_examples_modify_imagestreams=true

# Configure node kubelet arguments. pods-per-core is valid in OpenShift Origin 1.3 or OpenShift Container Platform 3.3 and later.
#openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
#openshift_node_kubelet_args={'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}

openshgift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true'], 'edits': [{ 'key': 'kubeletArguments.pods-per-core','value': ['20']}]}]

openshift_hosted_registry_replicas=1
{% if number_of_ocs_nodes >= '3' %}
openshift_hosted_registry_storage_kind=glusterfs
{% endif %}
# Registry Storage Options

{% if number_of_ocs_nodes >= '3' %}
# GlusterFS
openshift_storage_glusterfs_namespace=ocs
openshift_storage_glusterfs_name=ocs
openshift_storage_glusterfs_wipe=true
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_image=registry.access.redhat.com/rhgs3/rhgs-server-rhel7:{{ocs_version_tag}}
openshift_storage_glusterfs_heketi_image=registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7:{{ocs_version_tag}}
openshift_storage_glusterfs_block_image=registry.redhat.io/rhgs3/rhgs-gluster-block-prov-rhel7:{{ocs_version_tag}}
openshift_storage_glusterfs_heketi_image=registry.redhat.io/rhgs3/rhgs-volmanager-rhel7:{{ocs_version_tag}}

openshift_storage_glusterfs_block_deploy=true
openshift_storage_glusterfs_block_host_vol_create=true
openshift_storage_glusterfs_block_host_vol_size=20
openshift_storage_glusterfs_block_storageclass=true

# check https://access.redhat.com/solutions/3617551
# however looking into the ansible-sripts on bastion, there is
# no evidence, that these verison-variables will take effect.
# see above
openshift_storage_glusterfs_version={{ocs_version_tag}}
openshift_storage_glusterfs_block_version={{ocs_version_tag}}
openshift_storage_glusterfs_s3_version={{ocs_version_tag}}
openshift_storage_glusterfs_heketi_version={{ocs_version_tag}}

{% endif %}

# Metrics deployment
openshift_metrics_install_metrics={{ true if metrics_install == 'true' else false }}
openshift_metrics_hawkular_hostname=metrics.{{_apps_dns}}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}

{% if number_of_ocs_nodes >= '3' %}
openshift_metrics_cassandra_pvc_size=2Gi
openshift_metrics_cassandra_storage_type=dynamic
{% endif %}

# Logging deployment
openshift_logging_use_ops=false
openshift_logging_install_logging={{ true if logging_install == 'true' else false }}
openshift_logging_kibana_hostname=logging.{{_apps_dns}}
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
{% if number_of_ocs_nodes >= '3' %}
openshift_logging_es_pvc_size=10Gi
openshift_logging_es_pvc_dynamic=false
openshift_logging_es_pvc_storage_class_name=glusterfs-ocs
{% endif %}


# Prometheus
openshift_cluster_monitoring_operator_install={{ true if monitoring_install == 'true' else false }}
openshift_cluster_monitoring_operator_node_selector={"node-role.kubernetes.io/infra":"true"}
{% if number_of_ocs_nodes >= '3' %}
openshift_cluster_monitoring_operator_alertmanager_storage_enabled=true
openshift_cluster_monitoring_operator_alertmanager_storage_capacity=1Gi
openshift_cluster_monitoring_operator_alertmanager_storage_class_name=glusterfs-ocs
openshift_cluster_monitoring_operator_prometheus_storage_enabled=true
openshift_cluster_monitoring_operator_prometheus_storage_capacity=5Gi
openshift_cluster_monitoring_operator_prometheus_storage_class_name=glusterfs-ocs
{% else %}
openshift_cluster_monitoring_operator_alertmanager_storage_enabled=false
openshift_cluster_monitoring_operator_prometheus_storage_enabled=false
{% endif %}


openshift_generate_no_proxy_hosts=true

[masters]
{% for host in guests %}
{% if host.node_group is defined and host.node_group == 'node-config-master' %}
{{host.name}}
{% endif %}
{% endfor %}


[etcd]
{% for host in guests %}
{% if host.node_group is defined and host.node_group == 'node-config-master' %}
{{host.name}}
{% endif %}
{% endfor %}


[nodes]
{% for host in guests %}
{% if host.name != 'bastion' %}
{{host.name}} openshift_node_group_name='{{host.node_group}}'
{% endif %}
{% endfor %}

{% if number_of_ocs_nodes >= '3' %}
[glusterfs]
{% for host in guests %}
{% if host.ocs_host is defined and host.ocs_host == 'true' %}
{{host.name}} glusterfs_ip={{hostvars[host.name]['ansible_default_ipv4']['address']}} glusterfs_devices='["/dev/{{ ocs_storage_device }}"]'
{% endif %}
{% endfor %}
{% endif %}
