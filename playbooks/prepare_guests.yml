---
- name: Create inventory
  gather_facts: no
  hosts: all
  vars_files:
  - vars/guests.yml
  tasks:
  - name: Add bastion to dynamic host
    add_host:
      name: bastion
      group: bast
  - name: Add other hosts to nodes group
    add_host:
      name: "{{item.name}}"
      group: nodes
    when: item.name != 'bastion'
    with_items: "{{guests}}"

- name: Figure out pool id from bastion subscription
  hosts: bast
  gather_facts: False
  serial: 1
  tasks:
  - name: Register hosts
    command: subscription-manager register --force --username={{ hostvars['localhost']['user'] }} --password={{ hostvars['localhost']['pwd'] }}
    retries: 5
    delay: 5
  - name: Get pool id
    shell: "subscription-manager list --available --matches '*Openshift*' --pool-only | tail -n 1"
    register: poolid
    retries: 5
    delay: 5
  - debug:
      msg: |
        "Managed to find pool id {{poolid.stdout}}"
  - set_fact:
      poolid: "{{poolid.stdout}}"

- name: Register nodes to RHN and subscribe
  hosts: all
  gather_facts: true
  vars_files:
  - vars/guests.yml
  tasks:
  - name: Check Red Hat subscription
    redhat_subscription:
      state: present
      username: "{{ hostvars['localhost']['user'] }}"
      password: "{{ hostvars['localhost']['pwd'] }}"
      pool: "{{ hostvars['bastion']['poolid'] }}"
    register: subscribe
    retries: 5
    delay: 5
  - debug:
      msg: "{{subscribe}}"
  - name: Disable all repos
    shell: |
      subscription-manager repos --disable=*
    retries: 5
    delay: 5
    when: subscribe.changed
  - name: Enable correct repos
    command: "subscription-manager repos --enable={{item}}"
    when: subscribe.changed
    retries: 5
    delay: 5
    with_items: "{{repos}}"
  - name: Ensure that required packages are present on target hosts
    yum:
      name: "{{item}}"
      state: latest
    retries: 5
    delay: 5
    with_items: "{{packages}}"

- name: Prepare bastion for OCP install
  gather_facts: False
  hosts: bast
  tasks:
  - name: Ensure that required packages are present on bastion host
    yum:
      name: "{{item}}"
      state: latest
    retries: 5
    delay: 5
    with_items: "{{packages_bastion}}"
  - name: Copy playbooks to bastion
    synchronize:
      src: /root/hetzner-ocp
      dest: /root/
  - name: Copy SSH keys from host to bastion
    copy:
      src: "{{item}}"
      dest: "{{item}}"
      mode: 0600
    items:
    - '/root/.ssh/id_rsa'
    - '/root/.ssh/id_rsa.pub'
    - '/root/.ssh/known_hosts'
  - name: Create exports dir
    file:
      path: /exports
      state: directory
  - name: Makefs for exports
    command: mkfs.ext4 /dev/vdc
  - name: Mount new disk to mount point
    mount:
      path: /var
      src: /dev/vdc
      fstype: ext4
      state: mounted
- name: Gather facts from localhost
  hosts: localhost
  tasks:
  - debug: msg='Gathering facts'
- name: Update 7.4 to latest
  hosts: nodes
  gather_facts: false
  tasks:
  - name: Update packages
    yum:
      name: '*'
      state: latest
  - name: Shutdown
    shell: sleep 2 && shutdown -r now "Reboot triggered by Ansible"
    async: 1
    poll: 0
    ignore_errors: true
  - name: Wait for host to come back up
    local_action:
      module: wait_for
      host: "{{ inventory_hostname }}"
      port: 22
      delay: 5
      timeout: 300
- name: Create inventory
  hosts: bast
  tasks:
  vars:
    ip_addr: "{{hostvars['localhost']['ansible_default_ipv4']['address']}}"
  roles:
  - { role: inventory}
- name: Install docker
  gather_facts: False
  hosts: nodes
  tasks:
  roles:
  - { role: docker_setup, device: '/dev/vdc'}
