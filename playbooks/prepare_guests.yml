---
- name: Register bastion to RHN and subscribe
  hosts: bast
  gather_facts: False
  serial: 1
  vars:
    do_not_subscribe: false
  tasks:
  - name: Register hosts
    command: subscription-manager register --force --username={{rhn_username}} --password={{rhn_password}}
    retries: 3
    delay: 1
    when: not do_not_subscribe
  - name: Get pool id
    shell: "subscription-manager list --available --matches 'Employee SKU' --pool-only | tail -n 1"
    register: poolid
    retries: 3
    delay: 1
    when: not do_not_subscribe
  - name: Subscribe hosts
    command: "subscription-manager attach --pool={{ poolid.stdout }}"
    retries: 3
    delay: 1
    when: not do_not_subscribe
  - set_fact:
      poolid: "{{poolid.stdout}}"
    when: not do_not_subscribe
  - set_fact:
      pwd: "{{rhn_password}}"
      user: "{{rhn_username}}"
      do_not_subscribe: "{{do_not_subscribe}}"
- name: Register nodes to RHN and subscribe
  hosts: nodes
  gather_facts: False
  serial: 1
  tasks:
  - name: Register hosts
    command: subscription-manager register --force --username={{ hostvars['bastion']['user'] }} --password={{ hostvars['bastion']['pwd'] }}
    retries: 3
    delay: 1
    when: not hostvars['bastion']['do_not_subscribe']
  - name: Subscribe hosts
    command: "subscription-manager attach --pool={{ hostvars['bastion']['poolid'] }}"
    retries: 3
    delay: 1
    when: not hostvars['bastion']['do_not_subscribe']
- name: Manager repos
  hosts: bast,nodes
  gather_facts: False
  vars:
    ose_ver: 3.6
  tasks:
  - name: Disable all repos
    command: subscription-manager repos --disable='*'
    ignore_errors: true
  - name: Activate OCP repos
    command: "subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-ose-{{ose_ver}}-rpms --enable=rhel-7-fast-datapath-rpms --enable=rhel-7-server-optional-rpms"
- name: Prepare nodes for OCP install
  gather_facts: False
  hosts: nodes
  roles:
  - { role: yumstuff, packages: [wget,git,net-tools,bind-utils,iptables-services,bash-completion,nfs-utils,kexec-tools,sos,psacct]}
- name: Prepare bastion for OCP install
  gather_facts: False
  hosts: bast
  tasks:
  - name: Copy playbooks to bastion
    synchronize:
      src: /root/hetzner-ocp
      dest: /root/
  - name: Copy playbooks to bastion
    copy:
      src: "{{item}}"
      dest: "{{item}}"
      mode: 0600
    items:
    - '/root/.ssh/id_rsa'
    - '/root/.ssh/id_rsa.pub'
    - '/root/.ssh/known_hosts'
  - name: Create exports dir
    file:
      path: /exports
      state: directory
  - name: Makefs for exports
    command: mkfs.ext4 /dev/vdb
  - name: Mount new disk to mount point
    lineinfile:
      path: /etc/fstab
      state: present
      line: "/dev/vdb   /exports  ext4    defaults    0 0"
  - name: Refresh mounts
    command: mount -a
  roles:
  - { role: yumstuff, packages: [wget,git,net-tools,bind-utils,iptables-services,bash-completion,nfs-utils,kexec-tools,sos,psacct,atomic-openshift-utils,atomic-openshift-clients]}

- name: Gather facts from localhost
  hosts: localhost
  tasks:
  - debug: msg='Gathering facts'
- name: Update 7.4 to latest
  hosts: nodes
  gather_facts: false
  tasks:
  - name: Update packages
    command: yum update -y
  - name: Shutdown
    shell: sleep 2 && shutdown -r now "Reboot triggered by Ansible"
    async: 1
    poll: 0
    ignore_errors: true
  - name: Wait for host to come back up
    local_action:
      module: wait_for
      host: "{{ inventory_hostname }}"
      port: 22
      delay: 5
      timeout: 300
- name: Create inventory
  hosts: bast
  vars:
    ip_addr: "{{hostvars['localhost']['ansible_default_ipv4']['address']}}"
  roles:
  - { role: inventory}
- name: Install docker
  gather_facts: False
  hosts: nodes
  roles:
  - { role: docker_setup, device: '/dev/vdb'}
