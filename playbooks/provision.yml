---
- name: Create in-memory inventory
  gather_facts: no
  hosts: localhost
  vars_files:
  - vars/guests.yml
  roles:
  - inmemory_inventory

- name: Start and ensure libvirtd is running
  hosts: localhost
  gather_facts: false
  tasks:
  - name: start libvirtd
    service: name=libvirtd state=started enabled=yes
    register: libvirtd
  - name: wait for libvirtd to get up
    pause: seconds=5
    when: libvirtd.changed

- name: Create and start guest VMs
  hosts: localhost
  gather_facts: no
  vars_files:
  - vars/guests.yml
  roles:
  - guests

- name: Create and start guest VMs
  hosts: localhost
  vars_files:
  - vars/guests.yml
  tasks:
  - name: Wait 30 secs for all VMs to get IP
    pause:
      seconds: 30
  - name: Clean up etc hosts
    lineinfile:
      path: /etc/hosts
      state: absent
      regexp: "{{item.name}}"
    with_items: "{{guests}}"
  - name: Initialize etc hosts
    lineinfile:
      path: /etc/hosts
      state: present
      line: "{{item}}"
    with_items:
    - 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
    - ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6
  - name: Rewrite etc hosts
    local_action:
      shell ip n | grep "`virsh dumpxml {{item.name}} | grep "mac address" | sed "s/.*'\(.*\)'.*/\1/g"`" | awk '{ gsub(/[\(\)]/,"",$1); print $1" {{item.name}}" }' >> /etc/hosts
    with_items: "{{guests}}"
  roles:
  - host_iptables

- name: post provision tasks
  hosts: localhost
  vars_files:
  - vars/guests.yml
  tasks:
  - name: Ensure rpcbind not running
    service:
      name: "{{item}}"
      state: stopped
    with_items:
    - rpcbind.socket
    - rpcbind.service
  - name: Disable rpcbind
    service:
      name: "{{item}}"
      enabled: no
    with_items:
    - rpcbind.socket
    - rpcbind.service
  - name: Check that all guest are up and running before continuing.
    local_action:
      module: wait_for
      host: "{{ item.name }}"
      port: 22
      delay: 1
      timeout: 300
    with_items: "{{guests}}"
