---
- name: Create in-memory inventory
  gather_facts: no
  hosts: localhost
  vars_files:
  - vars/guests.yml
  roles:
  - inmemory_inventory

- name: Create PV directories for NFS
  hosts: bastion
  gather_facts: yes
  tasks:
  - name: "Setup NFS exports"
    lineinfile:
      dest: /etc/exports.d/openshift-ansible.exports
      state: present
      line: "{{nfs_dir}}/pv{{item}} *(rw,root_squash,no_wdelay)"
    with_items:
    - "{{nfs_pv_names}}"
  - name: "Create directories"
    file:
      path: "{{nfs_dir}}/pv{{item}}"
      state: directory
      owner: nfsnobody
      group: nfsnobody
      mode: 0777
    with_items:
    - "{{nfs_pv_names}}"
  - name: Refresh nfs exports
    command: exportfs -ra
  - name: Save bastion ip for later use
    set_fact:
      bastion_ip: "{{hostvars.bastion.ansible_eth0.ipv4.address}}"

- name: Create PV objects for NFS
  hosts: master01
  gather_facts: yes
  vars:
    nfshost: "{{ hostvars['bastion']['bastion_ip'] }}"
  tasks:
  - name: "Create dir for pv files"
    file:
      path: /tmp/pvs-nfs
      state: directory
  - name: "Create pv files"
    copy:
      dest: /tmp/pvs-nfs/pv{{item.0}}-nfs.yaml
      content: |
        apiVersion: v1
        kind: PersistentVolume
        metadata:
          name: pv{{item.0}}-nfs
        spec:
          capacity:
            storage: {{item.1}}
          accessModes:
            - ReadWriteOnce
            - ReadWriteMany
          persistentVolumeReclaimPolicy: Recycle
          nfs:
            path: {{nfs_dir}}/pv{{item.0}}
            server: {{nfshost}}
    with_together:
    - "{{nfs_pv_names}}"
    - "{{nfs_pv_names}}"
    register: pv_files
  - name: "Create PVs"
    command: "oc create -f /tmp/pvs-nfs/"
    when: pv_files.changed
