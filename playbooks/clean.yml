---
- name: Create inventory for cleaning
  hosts: localhost
  gather_facts: False
  vars_files:
  - vars/guests.yml
  roles:
  - inmemory_inventory

  tasks:
  - name: Remove old known_hosts
    file:
      path: /root/.ssh/known_hosts
      state: absent

  - name: Get master01 ip addr
    local_action:
      shell ip n | grep "`virsh dumpxml master01 | grep "mac address" | sed "s/.*'\(.*\)'.*/\1/g"`" | awk '{ gsub(/[\(\)]/,"",$1); print $1"" }'
    register: master_ip_addr

  - name: Get infranode ip addr
    local_action:
      shell ip n | grep "`virsh dumpxml infranode01 | grep "mac address" | sed "s/.*'\(.*\)'.*/\1/g"`" | awk '{ gsub(/[\(\)]/,"",$1); print $1"" }'
    register: infranode_ip_addr

  - name: remove http nat for infra
    iptables:
      table: nat
      chain: PREROUTING
      destination: "{{hostvars['localhost']['ansible_default_ipv4']['address']}}"
      protocol: tcp
      match: tcp
      destination_port: 80
      jump: DNAT
      to_destination: "{{infranode_ip_addr.stdout}}:80"
      comment: OCP - Redirect http traffic to infranode
      state: absent
  - name: remove https nat for infra
    iptables:
      table: nat
      chain: PREROUTING
      destination: "{{hostvars['localhost']['ansible_default_ipv4']['address']}}"
      protocol: tcp
      match: tcp
      destination_port: 443
      jump: DNAT
      to_destination: "{{infranode_ip_addr.stdout}}:443"
      comment: OCP - Redirect https traffic to infranode
      state: absent
  - name: remove https nat for master
    iptables:
      table: nat
      chain: PREROUTING
      destination: "{{hostvars['localhost']['ansible_default_ipv4']['address']}}"
      protocol: tcp
      match: tcp
      destination_port: 8443
      jump: DNAT
      to_destination: "{{master_ip_addr.stdout}}:8443"
      comment: OCP - Redirect master https traffic to infranode
      state: absent
  - name: remove https postrouting nat for master
    iptables:
      table: nat
      chain: POSTROUTING
      destination: "{{master_ip_addr.stdout}}"
      protocol: tcp
      match: tcp
      destination_port: 8443
      jump: MASQUERADE
      comment: OCP - Post routing rule from cluster to master
      state: absent
  - name: remove http postrouting nat for infra
    iptables:
      table: nat
      chain: POSTROUTING
      destination: "{{infranode_ip_addr.stdout}}"
      protocol: tcp
      match: tcp
      destination_port: 80
      jump: MASQUERADE
      comment: OCP - Post routing rule from cluster to infra
      state: absent
  - name: delete https postrouting nat for infra
    iptables:
      table: nat
      chain: POSTROUTING
      destination: "{{infranode_ip_addr.stdout}}"
      protocol: tcp
      match: tcp
      destination_port: 443
      jump: MASQUERADE
      comment: OCP - Post routing rule from cluster to infra
      state: absent
  - name: remove allow FORWARD for all guest network DNAT traffic
    iptables:
      chain: FORWARD
      match: state
      ctstate: NEW,RELATED,ESTABLISHED
      destination: 192.168.122.0/24
      jump: ACCEPT
      comment: OCP - Allow all DNAT FORWARD to guest network
      state: absent
  - name: remove allow FORWARD for all guest network DNAT traffic
    iptables:
      chain: FORWARD
      match: state
      ctstate: NEW,RELATED,ESTABLISHED
      destination: 192.168.122.0/24
      jump: ACCEPT
      comment: OCP - Allow all DNAT FORWARD to guest network
      state: absent
  - name: Persist iptables rules
    local_action:
      "shell iptables-save > /etc/sysconfig/iptables"
  - name: Restart iptables service
    service:
      name: iptables
      state: restarted
  - name: stop virtual machines
    ignore_errors: yes
    virt:
      name: "{{ item.name }}"
      state: destroyed
    with_items: "{{ guests }}"

  - name: undefine virtual machines
    ignore_errors: yes
    virt:
      name: "{{ item.name }}"
      command: undefine
    with_items: "{{ guests }}"

  - name: delete cloud-init CDs for VMs
    file:
      path: "/var/lib/libvirt/images/cloud-init-{{ item.name }}.iso"
      state: absent
    with_items: "{{ guests }}"

  - name: delete extra disk images
    file:
      path: "/var/lib/libvirt/images/{{ item }}"
      state: absent
    with_items:
    - pvdata.img
    - bastion-nfs.img
    - docker-registry.img

  - name: find all docker images
    find:
      paths: /var/lib/libvirt/images
      patterns: "containers*.img"
    register: find_results

  - name: delete docker disk image
    file:
      path: "{{ item['path'] }}"
      state: absent
    with_items: "{{ find_results['files'] }}"

  - name: find all ocs images
    find:
      paths: /var/lib/libvirt/images
      patterns: "ocs*.img"
    register: find_results_ocs

  - name: delete ocs disk image
    file:
      path: "{{ item['path'] }}"
      state: absent
    with_items: "{{ find_results_ocs['files'] }}"


  - name: delete dirs for userdata
    file:
      path: "/tmp/{{ item.name }}"
      state: absent
    with_items: "{{ guests }}"

  - name: delete logical volumes for virtual os disks
    lvol:
      vg: "{{ volume_group }}"
      lv: "{{ item.name}}-a"
      state: absent
      force: yes
    with_items: "{{ guests }}"

  - name: delete logical volumes for virtual docker disks
    lvol:
      vg: "{{ volume_group }}"
      lv: "{{ item.name }}-b"
      state: absent
      force: yes
    with_items: "{{ guests }}"
